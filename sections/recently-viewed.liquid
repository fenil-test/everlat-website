{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'template-collection.css' | asset_url | stylesheet_tag }}

<script>
    // Function to set recently viewed products
    function setRecentlyViewedPdp() {
        const pdpData = {
            productTitle: "{{ product.title }}",
            productImg: "{{ product.featured_image | img_url: '500x' }}",
            productPrice: "{{ product.price | money }}",
            productUrl: "{{ product.url }}"
        };

        const productArr = [];
        let jsonResp, jsonRespArr, jsonRespArrStr;
        const numberOfProduct = 4;
        productArr.push(pdpData);

        const currPdpTitle = pdpData.productTitle;
        const pdpDataString = JSON.stringify(productArr);
        const localData = localStorage.getItem('recently_viewed');

        if (localData == null) {
            localStorage.setItem('recently_viewed', pdpDataString);
        } else {
            const oldPdpData = localStorage.getItem('recently_viewed');
            const countPdpData = (oldPdpData.match(/productTitle/g) || []).length;
            const reVisitPdp = oldPdpData.includes(currPdpTitle);

            if (countPdpData < numberOfProduct && !reVisitPdp) {
                jsonResp = JSON.parse(oldPdpData);
                jsonRespArr = jsonResp.concat(productArr);
                jsonRespArrStr = JSON.stringify(jsonRespArr);
                localStorage.setItem('recently_viewed', jsonRespArrStr);
            } else if (countPdpData >= numberOfProduct && !reVisitPdp) {
                jsonResp = JSON.parse(oldPdpData);
                jsonResp.shift();
                jsonRespArr = jsonResp.concat(productArr);
                jsonRespArrStr = JSON.stringify(jsonRespArr);
                localStorage.setItem('recently_viewed', jsonRespArrStr);
            }
        }
    }

    setRecentlyViewedPdp();
</script>

<div class="recently-title">
    <h4 class="title inline-richtext h2 scroll-trigger animate--slide-in"><b>Recently Viewed</b></h4>
</div>
<div class="js-recentPdpBlock"></div>

<script>
    // Function to get recently viewed products
    function getRecentPdp() {
        const pdpData = JSON.parse(localStorage.getItem('recently_viewed'));
        console.log(pdpData);
        const recentViewHtml = [];

        pdpData.forEach(function(item) {
            recentViewHtml.push(`
                <li
                    id="Slide-{{ section.id }}-{{ forloop.index }}"
                    class="grid__item{% if show_mobile_slider or show_desktop_slider %} slider__slide{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                    {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                    {% endif %}
                >
                    {% render 'card-product-view', 
                        product_url: "${item.productUrl}",
                        product_img: "${item.productImg}",
                        product_title: "${item.productTitle}",
                        product_price: "${item.productPrice}"
                    %}
                </li>
            `);
        });

        const recentBlock = `${recentViewHtml.join('')}`;
        console.log(recentBlock);
        const contentBlock = document.querySelectorAll('.js-recentPdpBlock');
        contentBlock.forEach(element => {
            element.innerHTML = recentBlock;
        });
    }

    document.addEventListener('DOMContentLoaded', getRecentPdp);
</script>

{% schema %}
{
  "name": "Recently product view",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [],
  "presets": [
    {
      "name": "Recently product view"
    }
  ]
}
{% endschema %}
